[{"/home/koko/springforward/react-film-starter-repo/src/index.js":"1","/home/koko/springforward/react-film-starter-repo/src/App.js":"2","/home/koko/springforward/react-film-starter-repo/src/registerServiceWorker.js":"3","/home/koko/springforward/react-film-starter-repo/src/Details.jsx":"4","/home/koko/springforward/react-film-starter-repo/src/FilmList.jsx":"5","/home/koko/springforward/react-film-starter-repo/src/TMDB.js":"6","/home/koko/springforward/react-film-starter-repo/src/FilmRow.jsx":"7","/home/koko/springforward/react-film-starter-repo/src/Poster.jsx":"8","/home/koko/springforward/react-film-starter-repo/src/Fave.jsx":"9"},{"size":280,"mtime":1646948354867,"results":"10","hashOfConfig":"11"},{"size":1151,"mtime":1647200115964,"results":"12","hashOfConfig":"11"},{"size":4022,"mtime":1646948354867,"results":"13","hashOfConfig":"11"},{"size":1017,"mtime":1647200160164,"results":"14","hashOfConfig":"11"},{"size":3054,"mtime":1647201199844,"results":"15","hashOfConfig":"11"},{"size":4039,"mtime":1646948354867,"results":"16","hashOfConfig":"11"},{"size":1038,"mtime":1647200979924,"results":"17","hashOfConfig":"11"},{"size":436,"mtime":1647155675616,"results":"18","hashOfConfig":"11"},{"size":1433,"mtime":1647200996414,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"us9f5m",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":7,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":2,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/home/koko/springforward/react-film-starter-repo/src/index.js",[],["44","45"],"/home/koko/springforward/react-film-starter-repo/src/App.js",["46","47","48"],"import \"./App.css\";\nimport React from \"react\";\nimport TMDB from \"./TMDB\";\nimport FilmList from \"./FilmList\";\nimport { useState } from \"react\";\nimport Details from './Details'\nimport Poster from \"./Poster\"\n// import Fave from './Fave'\n// import FilmRow from \"./FilmRow\";\n\nfunction App() {\n\n  const [current, setCurrent] = useState({});\n  //list of all the faves\n  const [films, setFilms] = useState(TMDB.films);\n\n\n  //make selected film the new currentpick\n  const selectedFilm = (idx) => {\n    setCurrent({current: idx});\n    console.log('SELECTED @APPS', idx)\n  }\n  \n\n  return (\n    <div className=\"App\">\n      <div className=\"film-library\">\n        <FilmList films={films} \n          // filter={filter}\n          // onFilterClick={handleFilterClick}\n          // onFaveclick={handleFaveClick}\n        />\n        <Details current={current} />\n      </div>\n    </div>\n  );\n} \n\nexport default App;\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"film-library\">\n//         <FilmList films={TMDB.films} />\n\n//         <Details films={TMDB.films} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","/home/koko/springforward/react-film-starter-repo/src/registerServiceWorker.js",[],"/home/koko/springforward/react-film-starter-repo/src/Details.jsx",["49","50","51","52","53","54","55","56"],"\r\n\r\nexport default function Details(current, filmIndex) {\r\n  const onSelectedFilm = (film) => {\r\n    console.log(`fetching details for ${film.title}`);\r\n  };\r\n  const posterUrl = \"https://image.tmdb.org/t/p/w780/\" + [film.poster_path];\r\n  const date = new Date(film.release_date);\r\n  const year = date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"film-row\" onClick={() => onSelectedFilm(film)}>\r\n      <Poster alt={film.title} url={posterUrl} />\r\n      <div className=\"film-summary\">\r\n        <h1>{film.title}</h1>\r\n        <p>{year}</p>\r\n      </div>\r\n      <Fave />\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"film-details\">\r\n      <h1 className=\"section-title\">DETAILS</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\n// import React, { Component } from 'react'\r\n\r\n// class Details extends Component {\r\n//   state = {  }\r\n//   render() {\r\n//     return (\r\n//       <div className=\"film-details\">\r\n//         <h1 className=\"section-title\">DETAILS</h1>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default Details;\r\n","/home/koko/springforward/react-film-starter-repo/src/FilmList.jsx",["57","58","59","60","61","62"],"import FilmRow from \"./FilmRow\";\r\nimport {useState} from \"react\"\r\n\r\nexport default function FilmList({\r\n  films\r\n}) {\r\n  const [toggleFave, setToggleFave] = useState(\"true\");\r\n  const [faves, setFaves] = useState([]);\r\n  const [filter, setFilter] = useState(\"all\");\r\n  console.log(\"FILMLIST:\", filter);\r\n  const allFilms = films.map((film) => {\r\n    return (\r\n      <FilmRow film={film} key={film.id} onFaveToggle={handleFaveToggle} />\r\n    );\r\n  });\r\n\r\n  const handleFaveToggle = (selectedFilm) => {\r\n    const filmIndex = faves.indexOf(selectedFilm);\r\n    let newFaves = [...faves]; //make copy\r\n    faves = setFilter[newFaves];\r\n    filmIndex < 0\r\n      ? (newFaves = [...newFaves, selectedFilm])\r\n      : newFaves.splice(filmIndex, 1);\r\n    console.log(\"handingfavetoggleoverhea\");\r\n  };\r\n\r\n  // const  handleFilterClick = (filter) => {\r\n  //     this.setState({\r\n  //       filter: filter,\r\n  //     });\r\n  //   };\r\n\r\n  return (\r\n    <div className=\"film-list\">\r\n      <h1 className=\"section-title\">FILMS</h1>\r\n\r\n      <div className=\"film-list-filters\">\r\n        <div\r\n          className={`film-list-filter ${filter === \"all\" ? \"is-active\" : \"\"}`}\r\n          onClick={(e) => onFilterClick(\"all\")}\r\n        >\r\n          ALL\r\n          <span className=\"section-count\">{films.length}</span>\r\n        </div>\r\n        <div\r\n          className={`film-list-filter ${\r\n            filter === \"faves\" ? \"is-active\" : \"\"\r\n          }`}\r\n          onClick={(e) => onFilterClick(\"faves\")}\r\n        >\r\n          {/* <Fave films={films} onFaveClick={onFaveClick} isFave={isFave} /> */}\r\n          FAVES\r\n          <span className=\"section-count\">0</span>\r\n        </div>\r\n      </div>\r\n      {allFilms}\r\n    </div>\r\n  );\r\n}\r\n\r\n// class FilmList extends Component {\r\n//   state = {\r\n//     filter: \"all\",\r\n//   };\r\n\r\n//   handleFilterClick = (filter) => {\r\n//     this.setState({\r\n//       filter: filter,\r\n//     });\r\n//     console.log(this.state.filter);\r\n//   };\r\n\r\n//   render() {\r\n//     const allFilms = this.props.films.map((film) => {\r\n//       return <FilmRow films={film} />;\r\n//     });\r\n\r\n//     return (\r\n//       <div className=\"film-list\">\r\n//         <h1 className=\"section-title\">FILMS</h1>\r\n//         <div className=\"film-list-filters\">\r\n//           <div\r\n//             className={`film-list-filter ${\r\n//               this.state.filter === \"all\" ? \"is-active\" : \"\"\r\n//             }`}\r\n//             onClick={() => this.handleFilterClick(\"all\")}\r\n//           >\r\n//             ALL\r\n//             <span className=\"section-count\">{this.props.films.length}</span>\r\n//           </div>\r\n//           <div\r\n//             className={`film-list-filter ${\r\n//               this.state.filter === \"faves\" ? \"is-active\" : \"\"\r\n//             }`}\r\n//             onClick={() => this.handleFilterClick(\"faves\")}\r\n//           >\r\n//             FAVES\r\n//             <span className=\"section-count\">0</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {allFilms}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default FilmList;\r\n","/home/koko/springforward/react-film-starter-repo/src/TMDB.js",[],"/home/koko/springforward/react-film-starter-repo/src/FilmRow.jsx",["63","64"],"import Poster from \"./Poster\";\r\nimport Fave from \"./Fave\";\r\n\r\nexport default function FilmRow({ film, onFaveToggle }) {\r\nreturn (\r\n  <>\r\n    <Fave films={film} onFaveToggle={onFaveToggle} isFave={isFave} />\r\n    <p>wtf goes here</p>\r\n  </>\r\n);\r\n}\r\n\r\n// class FilmRow extends Component {\r\n\r\n//   handleDetailsClick =(film) => {\r\n//     console.log(`fetching details for ${film}`)\r\n//   }\r\n\r\n//   render() {\r\n//     const posterUrl =\r\n//       \"https://image.tmdb.org/t/p/w780/\" + [this.props.films.poster_path];\r\n//     const date = new Date(this.props.films.release_date);\r\n//     const year = date.getFullYear();\r\n//     return (\r\n//       <div className=\"film-row\" onClick = {() => this.handleDetailsClick(this.props.films.title)}>\r\n//         <Poster alt={this.props.films.title} url={posterUrl} />\r\n\r\n//         <div className=\"film-summary\">\r\n//           <Fave />\r\n//           <h1>{this.props.films.title}</h1>\r\n//           <p>{year}</p>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default FilmRow;\r\n","/home/koko/springforward/react-film-starter-repo/src/Poster.jsx",[],"/home/koko/springforward/react-film-starter-repo/src/Fave.jsx",["65"],"export default function Fave( onFaveToggle ) {\r\n  console.log(\"FROMFAVE:PROPS\", onFaveToggle);\r\n  const handleClick = (e) => {\r\n    e.stopPropagation();\r\n    console.log(\"Handling Fave click!\");\r\n    onFaveToggle();\r\n  };\r\n\r\n  const action = props.isFave ? \"remove_from_queue\" : \"add_to_queue\";\r\n  console.log(action);\r\n  return (\r\n    <>\r\n      <div className={`film-row-fave ${action}`} onClick={() => handleClick()}>\r\n        <p className=\"material-icons\">add_to_queue</p>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  // Add this line. You'll call the function passed through props\r\n\r\n  // Delete the `setIsFaves` line. You no longer track state here\r\n  // setIsFave(!isFave)\r\n}\r\n// class Fave extends Component {\r\n//   state = {\r\n//     isFave:false\r\n//   }\r\n//   handleClick = (e) => {\r\n//     /* It prevents the event from bubbling up the DOM tree. */\r\n//     // e.stopPropagation();\r\n//     // console.log('stopprop')\r\n//     const currentState=this.state.isFave\r\n//     this.setState({isFave: !currentState});\r\n//     // return console.log('handling the fave')\r\n//   }\r\n//   render()  {\r\n//     const action = this.state.isFave ?'remove_from_queue':'add_to_queue'\r\n//     return (\r\n//       <>\r\n//         <div className={`film-row-fave ${action}`} onClick={() => this.handleClick('faves')}>\r\n//           <p className=\"material-icons\">add_to_queue</p>\r\n//         </div>\r\n//       </>\r\n//     )\r\n//   }\r\n// }\r\n// export default Fave;\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":14},{"ruleId":"70","severity":1,"message":"74","line":15,"column":17,"nodeType":"72","messageId":"73","endLine":15,"endColumn":25},{"ruleId":"70","severity":1,"message":"75","line":19,"column":9,"nodeType":"72","messageId":"73","endLine":19,"endColumn":21},{"ruleId":"76","severity":2,"message":"77","line":7,"column":59,"nodeType":"72","messageId":"78","endLine":7,"endColumn":63},{"ruleId":"76","severity":2,"message":"77","line":8,"column":25,"nodeType":"72","messageId":"78","endLine":8,"endColumn":29},{"ruleId":"76","severity":2,"message":"77","line":12,"column":61,"nodeType":"72","messageId":"78","endLine":12,"endColumn":65},{"ruleId":"79","severity":2,"message":"80","line":13,"column":8,"nodeType":"81","messageId":"82","endLine":13,"endColumn":14},{"ruleId":"76","severity":2,"message":"77","line":13,"column":20,"nodeType":"72","messageId":"78","endLine":13,"endColumn":24},{"ruleId":"76","severity":2,"message":"77","line":15,"column":14,"nodeType":"72","messageId":"78","endLine":15,"endColumn":18},{"ruleId":"79","severity":2,"message":"83","line":18,"column":8,"nodeType":"81","messageId":"82","endLine":18,"endColumn":12},{"ruleId":"84","severity":1,"message":"85","line":21,"column":3,"nodeType":"86","messageId":"87","endLine":25,"endColumn":5},{"ruleId":"70","severity":1,"message":"88","line":7,"column":10,"nodeType":"72","messageId":"73","endLine":7,"endColumn":20},{"ruleId":"70","severity":1,"message":"89","line":7,"column":22,"nodeType":"72","messageId":"73","endLine":7,"endColumn":35},{"ruleId":"70","severity":1,"message":"90","line":8,"column":17,"nodeType":"72","messageId":"73","endLine":8,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":20,"column":5,"nodeType":"72","messageId":"93","endLine":20,"endColumn":10},{"ruleId":"76","severity":2,"message":"94","line":40,"column":27,"nodeType":"72","messageId":"78","endLine":40,"endColumn":40},{"ruleId":"76","severity":2,"message":"94","line":49,"column":27,"nodeType":"72","messageId":"78","endLine":49,"endColumn":40},{"ruleId":"70","severity":1,"message":"71","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":14},{"ruleId":"76","severity":2,"message":"95","line":7,"column":60,"nodeType":"72","messageId":"78","endLine":7,"endColumn":66},{"ruleId":"76","severity":2,"message":"96","line":9,"column":18,"nodeType":"72","messageId":"78","endLine":9,"endColumn":23},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'Poster' is defined but never used.","Identifier","unusedVar","'setFilms' is assigned a value but never used.","'selectedFilm' is assigned a value but never used.","no-undef","'film' is not defined.","undef","react/jsx-no-undef","'Poster' is not defined.","JSXIdentifier","undefined","'Fave' is not defined.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'toggleFave' is assigned a value but never used.","'setToggleFave' is assigned a value but never used.","'setFaves' is assigned a value but never used.","no-const-assign","'faves' is constant.","const","'onFilterClick' is not defined.","'isFave' is not defined.","'props' is not defined.","no-global-assign","no-unsafe-negation"]