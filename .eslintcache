[{"C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\index.js":"1","C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\registerServiceWorker.js":"2","C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\App.js":"3","C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\TMDB.js":"4","C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\components\\FilmList.jsx":"5","C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\components\\Details.jsx":"6","C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\components\\FilmRow.jsx":"7","C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\Poster.jsx":"8","C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\components\\Fav.jsx":"9"},{"size":289,"mtime":1654813338862,"results":"10","hashOfConfig":"11"},{"size":4130,"mtime":1654813338865,"results":"12","hashOfConfig":"11"},{"size":1464,"mtime":1655251620767,"results":"13","hashOfConfig":"11"},{"size":4117,"mtime":1654813338857,"results":"14","hashOfConfig":"11"},{"size":3887,"mtime":1655232290051,"results":"15","hashOfConfig":"11"},{"size":1542,"mtime":1655172950881,"results":"16","hashOfConfig":"11"},{"size":1914,"mtime":1655170841270,"results":"17","hashOfConfig":"11"},{"size":408,"mtime":1655164850062,"results":"18","hashOfConfig":"11"},{"size":1696,"mtime":1655229995824,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"4j93fq",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\index.js",[],["41","42"],"C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\registerServiceWorker.js",[],"C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\App.js",[],"C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\TMDB.js",[],"C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\components\\FilmList.jsx",["43"],"// import React, { Component } from 'react'\r\nimport FilmRow from './FilmRow'\r\nimport {useState} from \"react\"\r\n\r\nexport default function FilmList({movies, handleDetailsClick}){\r\n    // initializing /setting state\r\n    const [filter, setFilter] = useState(\"all\") \r\n    const [faves, setFaves] = useState([])\r\n    const [isFave, setIsFave] = useState(false)\r\n\r\n    const handleFaveToggle = (movie) => {\r\n        let newFaves = faves\r\n        // films for when we know what the data looks like, indexOf to find it and remove it from faves?\r\n        let filmIndex = newFaves.indexOf(movie)\r\n        if (filmIndex < 0) {\r\n            // console.log(\"ADDING FILM NAME TO FAVES\")\r\n            newFaves.push(movie)\r\n            setIsFave(isFave => !isFave)\r\n        } else {\r\n            // console.log(\"REMOVING FILM NAME TO FAVES\")\r\n            newFaves.splice(filmIndex,1)\r\n            setIsFave(isFave => !isFave)\r\n        }\r\n        setFaves(newFaves)\r\n    }\r\n\r\n    const filmsToDisplay = filter === \"all\" ? movies : faves;\r\n    const allFilms = filmsToDisplay.map((film) => {\r\n        return (\r\n            <FilmRow\r\n                key={film.id}\r\n                film={film}\r\n                onFaveToggle = {handleFaveToggle}\r\n                isFave = {faves.includes(film)}\r\n                handleDetailsClick = {handleDetailsClick}\r\n            />\r\n        )\r\n    }) \r\n    \r\n    return(\r\n        <>\r\n            <div className=\"film-list\">\r\n                <h1 className=\"section-title\">FILMS</h1>\r\n                <div className=\"film-list-filters\">\r\n                    <div\r\n                        onClick={() => setFilter(\"all\")}\r\n                        className={`film-list-filter ${filter === \"all\" ? 'is-active' : ''}`}\r\n                    >\r\n                        ALL\r\n                        <span className=\"section-count\">{movies.length}</span>\r\n                    </div>\r\n                    <div\r\n                        onClick={() => setFilter(\"faves\")}\r\n                        className={`film-list-filter ${filter !== \"all\" ? 'is-active' : ''}`}\r\n                    >\r\n                        FAVES\r\n                        <span className=\"section-count\">{faves.length}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                {allFilms}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n// export default class FilmList extends Component {\r\n//     state = {\r\n//         filter: 'all'\r\n//     }\r\n//     handleFilterClick = (filter) => {\r\n//         this.setState({\r\n//             filter\r\n//         })\r\n//     }\r\n//     render() {\r\n//         const allFilms = this.props.movies.map((film) => {\r\n//             return (\r\n//                 <FilmRow\r\n//                     key={film.id}\r\n//                     film={film}\r\n//                 />\r\n//             )\r\n//         })\r\n//         return (\r\n//             <div className=\"film-list\">\r\n//                 <h1 className=\"section-title\">FILMS</h1>\r\n//                 <div className=\"film-list-filters\">\r\n//                     <div\r\n//                         onClick={() => this.handleFilterClick('all')}\r\n//                         className={`film-list-filter ${this.state.filter === \"all\" ? 'is-active' : ''}`}\r\n//                     >\r\n//                         ALL\r\n//                         <span className=\"section-count\">{this.props.movies.length}</span>\r\n//                     </div>\r\n//                     <div\r\n//                         onClick={() => this.handleFilterClick('favs')}\r\n//                         className={`film-list-filter ${this.state.filter !== \"all\" ? 'is-active' : ''}`}\r\n//                     >\r\n//                         FAVES\r\n//                         <span className=\"section-count\">0</span>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 {allFilms}\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n","C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\components\\Details.jsx",[],"C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\components\\FilmRow.jsx",[],"C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\Poster.jsx",[],"C:\\Users\\Billy Lu\\Documents\\GA-SEI-425\\Unit-3\\lab\\react-film-lab\\src\\components\\Fav.jsx",["44"],"// import React, { Component } from 'react'\r\nimport {useState} from \"react\"\r\n\r\nexport default function Fav({film,onFaveToggle, isFave}) {\r\n    // console.log(\"fav props\", props)\r\n\r\n    const handleClick = (e) => {\r\n        // e.stopPropagation()\r\n        console.log('Handling Fave click!')\r\n      \r\n        // Add this line. You'll call the function passed through props\r\n        onFaveToggle(film)\r\n      \r\n        // Delete the `setIsFaves` line. You no longer track state here\r\n        // setIsFave(!isFave)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                onClick={(e) => {\r\n                    handleClick()\r\n                }}\r\n                className={`film-row-fave ${isFave ? 'remove_from_queue' : 'add_to_queue'}`}\r\n            >\r\n                <p className=\"material-icons\">{isFave ? 'remove_from_queue' : 'add_to_queue'}</p>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n// export default class Fav extends Component {\r\n//     state = {\r\n//         isFave: false\r\n//     }\r\n\r\n//     handleClick = () => {\r\n//         this.setState((previousState) => {\r\n//             return { isFave: previousState.isFave ? false : true }\r\n//         })\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div\r\n//                 onClick={(e) => {\r\n//                     e.stopPropagation()\r\n//                     this.handleClick()\r\n//                 }}\r\n//                 className={`film-row-fave ${this.state.isFave ? 'remove_from_queue' : 'add_to_queue'}`}\r\n//             >\r\n//                 <p className=\"material-icons\">{this.state.isFave ? 'remove_from_queue' : 'add_to_queue'}</p>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":9,"column":12,"nodeType":"51","messageId":"52","endLine":9,"endColumn":18},{"ruleId":"49","severity":1,"message":"53","line":2,"column":9,"nodeType":"51","messageId":"52","endLine":2,"endColumn":17},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'isFave' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]